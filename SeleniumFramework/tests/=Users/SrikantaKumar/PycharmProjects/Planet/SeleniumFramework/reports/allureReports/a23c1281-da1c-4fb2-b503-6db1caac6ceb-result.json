{"name": "test_saveSearch2", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <SeleniumFramework.pages.SaveSearch.SaveSearch object at 0x0000022E0C2D3F10>, locatorValue = \"//label[contains(text(),'Name')]/following-sibling::div/child::input\"\nlocatorType = 'xpath'\n\n    def waitForElement(self, locatorValue, locatorType):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n>           webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n\n..\\base\\BaseClass.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"55d1b2f76fa5d407909e7acee2123c14\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000022E0C224430>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00946643]\nE       \t(No symbol) [0x008DBE21]\nE       \t(No symbol) [0x007DDA9D]\nE       \t(No symbol) [0x00811342]\nE       \t(No symbol) [0x0081147B]\nE       \t(No symbol) [0x00848DC2]\nE       \t(No symbol) [0x0082FDC4]\nE       \t(No symbol) [0x00846B09]\nE       \t(No symbol) [0x0082FB76]\nE       \t(No symbol) [0x008049C1]\nE       \t(No symbol) [0x00805E5D]\nE       \tGetHandleVerifier [0x00BBA142+2497106]\nE       \tGetHandleVerifier [0x00BE85D3+2686691]\nE       \tGetHandleVerifier [0x00BEBB9C+2700460]\nE       \tGetHandleVerifier [0x009F3B10+635936]\nE       \t(No symbol) [0x008E4A1F]\nE       \t(No symbol) [0x008EA418]\nE       \t(No symbol) [0x008EA505]\nE       \t(No symbol) [0x008F508B]\nE       \tBaseThreadInitThunk [0x775800F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77737BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77737B8E+238]\n\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <SeleniumFramework.tests.test_LoginPageAndSaveSearchTest.LogInAndSaveSearchTest testMethod=test_saveSearch2>\n\n    @pytest.mark.run(order=4)\n    def test_saveSearch2(self):\n>       self.sv.searchSave2()\n\ntest_LoginPageAndSaveSearchTest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\SaveSearch.py:42: in searchSave2\n    ele1=self.waitForElement(self._saveSearchNameBox, \"xpath\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <SeleniumFramework.pages.SaveSearch.SaveSearch object at 0x0000022E0C2D3F10>, locatorValue = \"//label[contains(text(),'Name')]/following-sibling::div/child::input\"\nlocatorType = 'xpath'\n\n    def waitForElement(self, locatorValue, locatorType):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n            webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n            self.log.info(\"WebElement found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n        except:\n            self.log.error(\n                \"WebElement not found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n            print_stack()\n            #self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BaseClass.py:78: AssertionError"}, "attachments": [{"name": "log", "source": "36f97bbc-f9e4-4f56-aa53-3797a4267175-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1eb131b6-359a-4e3a-89c0-b6dd45388457-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b3b7292f-73d6-4817-992d-5eaee55c1df9-attachment.txt", "type": "text/plain"}], "start": 1675226939741, "stop": 1675226965436, "uuid": "03ed01e6-2c1f-494d-8a6f-e8f639afec01", "historyId": "7c92d093b845816b2c7e4a60f467902c", "testCaseId": "6da7ca26a03a3dcc19c97901395294f4", "fullName": "test_LoginPageAndSaveSearchTest.LogInAndSaveSearchTest#test_saveSearch2", "labels": [{"name": "tag", "value": "run(order=4)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "test_LoginPageAndSaveSearchTest"}, {"name": "subSuite", "value": "LogInAndSaveSearchTest"}, {"name": "host", "value": "Srikanta"}, {"name": "thread", "value": "14932-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_LoginPageAndSaveSearchTest"}]}